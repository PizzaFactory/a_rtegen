<?xml version="1.0" encoding="utf-8"?>
<!--Created with SystemDesk 4.2.0.6962-->
<AUTOSAR xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://autosar.org/schema/r4.0" xsi:schemaLocation="http://autosar.org/schema/r4.0 AUTOSAR_4-0-3.xsd">
	<AR-PACKAGES>
		<AR-PACKAGE>
			<SHORT-NAME>BaseTypeGeneric</SHORT-NAME>
			<ELEMENTS>
				<SW-BASE-TYPE>
					<SHORT-NAME>boolean</SHORT-NAME>
					<CATEGORY>FIXED_LENGTH</CATEGORY>
					<BASE-TYPE-SIZE>8</BASE-TYPE-SIZE>
					<BASE-TYPE-ENCODING>BOOLEAN</BASE-TYPE-ENCODING>
					<MEM-ALIGNMENT>0</MEM-ALIGNMENT>
					<NATIVE-DECLARATION>boolean</NATIVE-DECLARATION>
				</SW-BASE-TYPE>
				<SW-BASE-TYPE>
					<SHORT-NAME>float32</SHORT-NAME>
					<CATEGORY>FIXED_LENGTH</CATEGORY>
					<BASE-TYPE-SIZE>32</BASE-TYPE-SIZE>
					<BASE-TYPE-ENCODING>IEEE754</BASE-TYPE-ENCODING>
					<MEM-ALIGNMENT>0</MEM-ALIGNMENT>
					<NATIVE-DECLARATION>float</NATIVE-DECLARATION>
				</SW-BASE-TYPE>
				<SW-BASE-TYPE>
					<SHORT-NAME>float64</SHORT-NAME>
					<CATEGORY>FIXED_LENGTH</CATEGORY>
					<BASE-TYPE-SIZE>64</BASE-TYPE-SIZE>
					<BASE-TYPE-ENCODING>IEEE754</BASE-TYPE-ENCODING>
					<MEM-ALIGNMENT>0</MEM-ALIGNMENT>
					<NATIVE-DECLARATION>double</NATIVE-DECLARATION>
				</SW-BASE-TYPE>
				<SW-BASE-TYPE>
					<SHORT-NAME>sint16</SHORT-NAME>
					<CATEGORY>FIXED_LENGTH</CATEGORY>
					<BASE-TYPE-SIZE>16</BASE-TYPE-SIZE>
					<BASE-TYPE-ENCODING>2C</BASE-TYPE-ENCODING>
					<MEM-ALIGNMENT>0</MEM-ALIGNMENT>
					<NATIVE-DECLARATION>short</NATIVE-DECLARATION>
				</SW-BASE-TYPE>
				<SW-BASE-TYPE>
					<SHORT-NAME>sint32</SHORT-NAME>
					<CATEGORY>FIXED_LENGTH</CATEGORY>
					<BASE-TYPE-SIZE>32</BASE-TYPE-SIZE>
					<BASE-TYPE-ENCODING>2C</BASE-TYPE-ENCODING>
					<MEM-ALIGNMENT>0</MEM-ALIGNMENT>
					<NATIVE-DECLARATION>long</NATIVE-DECLARATION>
				</SW-BASE-TYPE>
				<SW-BASE-TYPE>
					<SHORT-NAME>sint8</SHORT-NAME>
					<CATEGORY>FIXED_LENGTH</CATEGORY>
					<BASE-TYPE-SIZE>8</BASE-TYPE-SIZE>
					<BASE-TYPE-ENCODING>2C</BASE-TYPE-ENCODING>
					<MEM-ALIGNMENT>0</MEM-ALIGNMENT>
					<NATIVE-DECLARATION>signed char</NATIVE-DECLARATION>
				</SW-BASE-TYPE>
				<SW-BASE-TYPE>
					<SHORT-NAME>uint16</SHORT-NAME>
					<CATEGORY>FIXED_LENGTH</CATEGORY>
					<BASE-TYPE-SIZE>16</BASE-TYPE-SIZE>
					<BASE-TYPE-ENCODING>NONE</BASE-TYPE-ENCODING>
					<MEM-ALIGNMENT>0</MEM-ALIGNMENT>
					<NATIVE-DECLARATION>unsigned short</NATIVE-DECLARATION>
				</SW-BASE-TYPE>
				<SW-BASE-TYPE>
					<SHORT-NAME>uint32</SHORT-NAME>
					<CATEGORY>FIXED_LENGTH</CATEGORY>
					<BASE-TYPE-SIZE>32</BASE-TYPE-SIZE>
					<BASE-TYPE-ENCODING>NONE</BASE-TYPE-ENCODING>
					<MEM-ALIGNMENT>0</MEM-ALIGNMENT>
					<NATIVE-DECLARATION>unsigned long</NATIVE-DECLARATION>
				</SW-BASE-TYPE>
				<SW-BASE-TYPE>
					<SHORT-NAME>uint8</SHORT-NAME>
					<CATEGORY>FIXED_LENGTH</CATEGORY>
					<BASE-TYPE-SIZE>8</BASE-TYPE-SIZE>
					<BASE-TYPE-ENCODING>NONE</BASE-TYPE-ENCODING>
					<MEM-ALIGNMENT>0</MEM-ALIGNMENT>
					<NATIVE-DECLARATION>unsigned char</NATIVE-DECLARATION>
				</SW-BASE-TYPE>
			</ELEMENTS>
		</AR-PACKAGE>
		<AR-PACKAGE>
			<SHORT-NAME>ImplDataTypes</SHORT-NAME>
			<ELEMENTS>
				<IMPLEMENTATION-DATA-TYPE>
					<SHORT-NAME>ActionRequest</SHORT-NAME>
					<CATEGORY>VALUE</CATEGORY>
					<SW-DATA-DEF-PROPS>
						<SW-DATA-DEF-PROPS-VARIANTS>
							<SW-DATA-DEF-PROPS-CONDITIONAL>
								<BASE-TYPE-REF DEST="SW-BASE-TYPE">/BaseTypeGeneric/boolean</BASE-TYPE-REF>
							</SW-DATA-DEF-PROPS-CONDITIONAL>
						</SW-DATA-DEF-PROPS-VARIANTS>
					</SW-DATA-DEF-PROPS>
				</IMPLEMENTATION-DATA-TYPE>
				<IMPLEMENTATION-DATA-TYPE>
					<SHORT-NAME>ButtonState</SHORT-NAME>
					<CATEGORY>VALUE</CATEGORY>
					<SW-DATA-DEF-PROPS>
						<SW-DATA-DEF-PROPS-VARIANTS>
							<SW-DATA-DEF-PROPS-CONDITIONAL>
								<BASE-TYPE-REF DEST="SW-BASE-TYPE">/BaseTypeGeneric/boolean</BASE-TYPE-REF>
							</SW-DATA-DEF-PROPS-CONDITIONAL>
						</SW-DATA-DEF-PROPS-VARIANTS>
					</SW-DATA-DEF-PROPS>
				</IMPLEMENTATION-DATA-TYPE>
				<IMPLEMENTATION-DATA-TYPE>
					<SHORT-NAME>LedState</SHORT-NAME>
					<CATEGORY>VALUE</CATEGORY>
					<SW-DATA-DEF-PROPS>
						<SW-DATA-DEF-PROPS-VARIANTS>
							<SW-DATA-DEF-PROPS-CONDITIONAL>
								<BASE-TYPE-REF DEST="SW-BASE-TYPE">/BaseTypeGeneric/boolean</BASE-TYPE-REF>
							</SW-DATA-DEF-PROPS-CONDITIONAL>
						</SW-DATA-DEF-PROPS-VARIANTS>
					</SW-DATA-DEF-PROPS>
				</IMPLEMENTATION-DATA-TYPE>
				<IMPLEMENTATION-DATA-TYPE>
					<SHORT-NAME>LockState</SHORT-NAME>
					<CATEGORY>VALUE</CATEGORY>
					<SW-DATA-DEF-PROPS>
						<SW-DATA-DEF-PROPS-VARIANTS>
							<SW-DATA-DEF-PROPS-CONDITIONAL>
								<BASE-TYPE-REF DEST="SW-BASE-TYPE">/BaseTypeGeneric/boolean</BASE-TYPE-REF>
							</SW-DATA-DEF-PROPS-CONDITIONAL>
						</SW-DATA-DEF-PROPS-VARIANTS>
					</SW-DATA-DEF-PROPS>
				</IMPLEMENTATION-DATA-TYPE>
				<IMPLEMENTATION-DATA-TYPE>
					<SHORT-NAME>WindowPosition</SHORT-NAME>
					<CATEGORY>VALUE</CATEGORY>
					<SW-DATA-DEF-PROPS>
						<SW-DATA-DEF-PROPS-VARIANTS>
							<SW-DATA-DEF-PROPS-CONDITIONAL>
								<BASE-TYPE-REF DEST="SW-BASE-TYPE">/BaseTypeGeneric/uint8</BASE-TYPE-REF>
							</SW-DATA-DEF-PROPS-CONDITIONAL>
						</SW-DATA-DEF-PROPS-VARIANTS>
					</SW-DATA-DEF-PROPS>
				</IMPLEMENTATION-DATA-TYPE>
			</ELEMENTS>
		</AR-PACKAGE>
		<AR-PACKAGE>
			<SHORT-NAME>Interfaces</SHORT-NAME>
			<ELEMENTS>
				<SENDER-RECEIVER-INTERFACE>
					<SHORT-NAME>IfActionRequest</SHORT-NAME>
					<IS-SERVICE>false</IS-SERVICE>
					<DATA-ELEMENTS>
						<VARIABLE-DATA-PROTOTYPE>
							<SHORT-NAME>up</SHORT-NAME>
							<TYPE-TREF DEST="IMPLEMENTATION-DATA-TYPE">/ImplDataTypes/ActionRequest</TYPE-TREF>
						</VARIABLE-DATA-PROTOTYPE>
						<VARIABLE-DATA-PROTOTYPE>
							<SHORT-NAME>down</SHORT-NAME>
							<TYPE-TREF DEST="IMPLEMENTATION-DATA-TYPE">/ImplDataTypes/ActionRequest</TYPE-TREF>
						</VARIABLE-DATA-PROTOTYPE>
					</DATA-ELEMENTS>
				</SENDER-RECEIVER-INTERFACE>
				<CLIENT-SERVER-INTERFACE>
					<SHORT-NAME>IfButtonState</SHORT-NAME>
					<IS-SERVICE>false</IS-SERVICE>
					<OPERATIONS>
						<CLIENT-SERVER-OPERATION>
							<SHORT-NAME>GetButtonState</SHORT-NAME>
							<ARGUMENTS>
								<ARGUMENT-DATA-PROTOTYPE>
									<SHORT-NAME>up</SHORT-NAME>
									<TYPE-TREF DEST="IMPLEMENTATION-DATA-TYPE">/ImplDataTypes/ButtonState</TYPE-TREF>
									<DIRECTION>OUT</DIRECTION>
								</ARGUMENT-DATA-PROTOTYPE>
								<ARGUMENT-DATA-PROTOTYPE>
									<SHORT-NAME>down</SHORT-NAME>
									<TYPE-TREF DEST="IMPLEMENTATION-DATA-TYPE">/ImplDataTypes/ButtonState</TYPE-TREF>
									<DIRECTION>OUT</DIRECTION>
								</ARGUMENT-DATA-PROTOTYPE>
							</ARGUMENTS>
						</CLIENT-SERVER-OPERATION>
					</OPERATIONS>
				</CLIENT-SERVER-INTERFACE>
				<CLIENT-SERVER-INTERFACE>
					<SHORT-NAME>IfLedState</SHORT-NAME>
					<IS-SERVICE>false</IS-SERVICE>
					<OPERATIONS>
						<CLIENT-SERVER-OPERATION>
							<SHORT-NAME>SetLedState</SHORT-NAME>
							<ARGUMENTS>
								<ARGUMENT-DATA-PROTOTYPE>
									<SHORT-NAME>state</SHORT-NAME>
									<TYPE-TREF DEST="IMPLEMENTATION-DATA-TYPE">/ImplDataTypes/LedState</TYPE-TREF>
									<DIRECTION>IN</DIRECTION>
								</ARGUMENT-DATA-PROTOTYPE>
							</ARGUMENTS>
						</CLIENT-SERVER-OPERATION>
					</OPERATIONS>
				</CLIENT-SERVER-INTERFACE>
				<CLIENT-SERVER-INTERFACE>
					<SHORT-NAME>IfLockState</SHORT-NAME>
					<IS-SERVICE>false</IS-SERVICE>
					<OPERATIONS>
						<CLIENT-SERVER-OPERATION>
							<SHORT-NAME>GetLockState</SHORT-NAME>
							<ARGUMENTS>
								<ARGUMENT-DATA-PROTOTYPE>
									<SHORT-NAME>state</SHORT-NAME>
									<TYPE-TREF DEST="IMPLEMENTATION-DATA-TYPE">/ImplDataTypes/LockState</TYPE-TREF>
									<DIRECTION>OUT</DIRECTION>
								</ARGUMENT-DATA-PROTOTYPE>
							</ARGUMENTS>
						</CLIENT-SERVER-OPERATION>
					</OPERATIONS>
				</CLIENT-SERVER-INTERFACE>
				<CLIENT-SERVER-INTERFACE>
					<SHORT-NAME>IfWindowPosition</SHORT-NAME>
					<IS-SERVICE>false</IS-SERVICE>
					<OPERATIONS>
						<CLIENT-SERVER-OPERATION>
							<SHORT-NAME>SetWindowPosition</SHORT-NAME>
							<ARGUMENTS>
								<ARGUMENT-DATA-PROTOTYPE>
									<SHORT-NAME>position</SHORT-NAME>
									<TYPE-TREF DEST="IMPLEMENTATION-DATA-TYPE">/ImplDataTypes/WindowPosition</TYPE-TREF>
									<DIRECTION>IN</DIRECTION>
								</ARGUMENT-DATA-PROTOTYPE>
							</ARGUMENTS>
						</CLIENT-SERVER-OPERATION>
					</OPERATIONS>
				</CLIENT-SERVER-INTERFACE>
			</ELEMENTS>
		</AR-PACKAGE>
		<AR-PACKAGE>
			<SHORT-NAME>PowerWindowController</SHORT-NAME>
			<ELEMENTS>
				<COMPLEX-DEVICE-DRIVER-SW-COMPONENT-TYPE>
					<SHORT-NAME>CddButton</SHORT-NAME>
					<PORTS>
						<P-PORT-PROTOTYPE>
							<SHORT-NAME>ButtonStateOut</SHORT-NAME>
							<PROVIDED-INTERFACE-TREF DEST="CLIENT-SERVER-INTERFACE">/Interfaces/IfButtonState</PROVIDED-INTERFACE-TREF>
						</P-PORT-PROTOTYPE>
					</PORTS>
					<INTERNAL-BEHAVIORS>
						<SWC-INTERNAL-BEHAVIOR>
							<SHORT-NAME>IB_CB</SHORT-NAME>
							<EVENTS>
								<OPERATION-INVOKED-EVENT>
									<SHORT-NAME>OperationInvokedEvent</SHORT-NAME>
									<START-ON-EVENT-REF DEST="RUNNABLE-ENTITY">/PowerWindowController/CddButton/IB_CB/GetButtonState</START-ON-EVENT-REF>
									<OPERATION-IREF>
										<CONTEXT-P-PORT-REF DEST="P-PORT-PROTOTYPE">/PowerWindowController/CddButton/ButtonStateOut</CONTEXT-P-PORT-REF>
										<TARGET-PROVIDED-OPERATION-REF DEST="CLIENT-SERVER-OPERATION">/Interfaces/IfButtonState/GetButtonState</TARGET-PROVIDED-OPERATION-REF>
									</OPERATION-IREF>
								</OPERATION-INVOKED-EVENT>
							</EVENTS>
							<HANDLE-TERMINATION-AND-RESTART>NO-SUPPORT</HANDLE-TERMINATION-AND-RESTART>
							<RUNNABLES>
								<RUNNABLE-ENTITY>
									<SHORT-NAME>GetButtonState</SHORT-NAME>
									<MINIMUM-START-INTERVAL>0</MINIMUM-START-INTERVAL>
									<CAN-BE-INVOKED-CONCURRENTLY>false</CAN-BE-INVOKED-CONCURRENTLY>
									<SYMBOL>GetButtonState</SYMBOL>
								</RUNNABLE-ENTITY>
							</RUNNABLES>
							<SUPPORTS-MULTIPLE-INSTANTIATION>false</SUPPORTS-MULTIPLE-INSTANTIATION>
						</SWC-INTERNAL-BEHAVIOR>
					</INTERNAL-BEHAVIORS>
				</COMPLEX-DEVICE-DRIVER-SW-COMPONENT-TYPE>
				<COMPLEX-DEVICE-DRIVER-SW-COMPONENT-TYPE>
					<SHORT-NAME>CddLockLed</SHORT-NAME>
					<PORTS>
						<P-PORT-PROTOTYPE>
							<SHORT-NAME>LedStateIn</SHORT-NAME>
							<PROVIDED-INTERFACE-TREF DEST="CLIENT-SERVER-INTERFACE">/Interfaces/IfLedState</PROVIDED-INTERFACE-TREF>
						</P-PORT-PROTOTYPE>
					</PORTS>
					<INTERNAL-BEHAVIORS>
						<SWC-INTERNAL-BEHAVIOR>
							<SHORT-NAME>IB_CLL</SHORT-NAME>
							<EVENTS>
								<OPERATION-INVOKED-EVENT>
									<SHORT-NAME>OperationInvokedEvent</SHORT-NAME>
									<START-ON-EVENT-REF DEST="RUNNABLE-ENTITY">/PowerWindowController/CddLockLed/IB_CLL/SetLedState</START-ON-EVENT-REF>
									<OPERATION-IREF>
										<CONTEXT-P-PORT-REF DEST="P-PORT-PROTOTYPE">/PowerWindowController/CddLockLed/LedStateIn</CONTEXT-P-PORT-REF>
										<TARGET-PROVIDED-OPERATION-REF DEST="CLIENT-SERVER-OPERATION">/Interfaces/IfLedState/SetLedState</TARGET-PROVIDED-OPERATION-REF>
									</OPERATION-IREF>
								</OPERATION-INVOKED-EVENT>
							</EVENTS>
							<HANDLE-TERMINATION-AND-RESTART>NO-SUPPORT</HANDLE-TERMINATION-AND-RESTART>
							<RUNNABLES>
								<RUNNABLE-ENTITY>
									<SHORT-NAME>SetLedState</SHORT-NAME>
									<MINIMUM-START-INTERVAL>0</MINIMUM-START-INTERVAL>
									<CAN-BE-INVOKED-CONCURRENTLY>false</CAN-BE-INVOKED-CONCURRENTLY>
									<SYMBOL>SetLedState</SYMBOL>
								</RUNNABLE-ENTITY>
							</RUNNABLES>
							<SUPPORTS-MULTIPLE-INSTANTIATION>false</SUPPORTS-MULTIPLE-INSTANTIATION>
						</SWC-INTERNAL-BEHAVIOR>
					</INTERNAL-BEHAVIORS>
				</COMPLEX-DEVICE-DRIVER-SW-COMPONENT-TYPE>
				<COMPLEX-DEVICE-DRIVER-SW-COMPONENT-TYPE>
					<SHORT-NAME>CddLockSwitch</SHORT-NAME>
					<PORTS>
						<P-PORT-PROTOTYPE>
							<SHORT-NAME>LockStateOut</SHORT-NAME>
							<PROVIDED-INTERFACE-TREF DEST="CLIENT-SERVER-INTERFACE">/Interfaces/IfLockState</PROVIDED-INTERFACE-TREF>
						</P-PORT-PROTOTYPE>
					</PORTS>
					<INTERNAL-BEHAVIORS>
						<SWC-INTERNAL-BEHAVIOR>
							<SHORT-NAME>IB_CLS</SHORT-NAME>
							<EVENTS>
								<OPERATION-INVOKED-EVENT>
									<SHORT-NAME>OperationInvokedEvent</SHORT-NAME>
									<START-ON-EVENT-REF DEST="RUNNABLE-ENTITY">/PowerWindowController/CddLockSwitch/IB_CLS/GetLockState</START-ON-EVENT-REF>
									<OPERATION-IREF>
										<CONTEXT-P-PORT-REF DEST="P-PORT-PROTOTYPE">/PowerWindowController/CddLockSwitch/LockStateOut</CONTEXT-P-PORT-REF>
										<TARGET-PROVIDED-OPERATION-REF DEST="CLIENT-SERVER-OPERATION">/Interfaces/IfLockState/GetLockState</TARGET-PROVIDED-OPERATION-REF>
									</OPERATION-IREF>
								</OPERATION-INVOKED-EVENT>
							</EVENTS>
							<HANDLE-TERMINATION-AND-RESTART>NO-SUPPORT</HANDLE-TERMINATION-AND-RESTART>
							<RUNNABLES>
								<RUNNABLE-ENTITY>
									<SHORT-NAME>GetLockState</SHORT-NAME>
									<MINIMUM-START-INTERVAL>0</MINIMUM-START-INTERVAL>
									<CAN-BE-INVOKED-CONCURRENTLY>false</CAN-BE-INVOKED-CONCURRENTLY>
									<SYMBOL>GetLockState</SYMBOL>
								</RUNNABLE-ENTITY>
							</RUNNABLES>
							<SUPPORTS-MULTIPLE-INSTANTIATION>false</SUPPORTS-MULTIPLE-INSTANTIATION>
						</SWC-INTERNAL-BEHAVIOR>
					</INTERNAL-BEHAVIORS>
				</COMPLEX-DEVICE-DRIVER-SW-COMPONENT-TYPE>
				<COMPLEX-DEVICE-DRIVER-SW-COMPONENT-TYPE>
					<SHORT-NAME>CddWindow</SHORT-NAME>
					<PORTS>
						<P-PORT-PROTOTYPE>
							<SHORT-NAME>WindowPositionIn</SHORT-NAME>
							<PROVIDED-INTERFACE-TREF DEST="CLIENT-SERVER-INTERFACE">/Interfaces/IfWindowPosition</PROVIDED-INTERFACE-TREF>
						</P-PORT-PROTOTYPE>
					</PORTS>
					<INTERNAL-BEHAVIORS>
						<SWC-INTERNAL-BEHAVIOR>
							<SHORT-NAME>IB_CW</SHORT-NAME>
							<EVENTS>
								<OPERATION-INVOKED-EVENT>
									<SHORT-NAME>OperationInvokedEvent</SHORT-NAME>
									<START-ON-EVENT-REF DEST="RUNNABLE-ENTITY">/PowerWindowController/CddWindow/IB_CW/SetWindowPosition</START-ON-EVENT-REF>
									<OPERATION-IREF>
										<CONTEXT-P-PORT-REF DEST="P-PORT-PROTOTYPE">/PowerWindowController/CddWindow/WindowPositionIn</CONTEXT-P-PORT-REF>
										<TARGET-PROVIDED-OPERATION-REF DEST="CLIENT-SERVER-OPERATION">/Interfaces/IfWindowPosition/SetWindowPosition</TARGET-PROVIDED-OPERATION-REF>
									</OPERATION-IREF>
								</OPERATION-INVOKED-EVENT>
							</EVENTS>
							<HANDLE-TERMINATION-AND-RESTART>NO-SUPPORT</HANDLE-TERMINATION-AND-RESTART>
							<RUNNABLES>
								<RUNNABLE-ENTITY>
									<SHORT-NAME>SetWindowPosition</SHORT-NAME>
									<MINIMUM-START-INTERVAL>0</MINIMUM-START-INTERVAL>
									<CAN-BE-INVOKED-CONCURRENTLY>false</CAN-BE-INVOKED-CONCURRENTLY>
									<SYMBOL>SetWindowPosition</SYMBOL>
								</RUNNABLE-ENTITY>
							</RUNNABLES>
							<SUPPORTS-MULTIPLE-INSTANTIATION>false</SUPPORTS-MULTIPLE-INSTANTIATION>
						</SWC-INTERNAL-BEHAVIOR>
					</INTERNAL-BEHAVIORS>
				</COMPLEX-DEVICE-DRIVER-SW-COMPONENT-TYPE>
				<COMPOSITION-SW-COMPONENT-TYPE>
					<SHORT-NAME>PWCTopLevel</SHORT-NAME>
					<ADMIN-DATA>
						<LANGUAGE>FOR-ALL</LANGUAGE>
						<SDGS>
							<SDG GID="edve:taggedStringValue">
								<SD GID="dSPACE:compositionDiagramFileName0">SystemDesk+PWCTopLevel(4EC517A1A7648863041E6B78DC097ED9).diagram</SD>
							</SDG>
						</SDGS>
					</ADMIN-DATA>
					<COMPONENTS>
						<SW-COMPONENT-PROTOTYPE>
							<SHORT-NAME>CddButton</SHORT-NAME>
							<TYPE-TREF DEST="COMPLEX-DEVICE-DRIVER-SW-COMPONENT-TYPE">/PowerWindowController/CddButton</TYPE-TREF>
						</SW-COMPONENT-PROTOTYPE>
						<SW-COMPONENT-PROTOTYPE>
							<SHORT-NAME>CddWindow</SHORT-NAME>
							<TYPE-TREF DEST="COMPLEX-DEVICE-DRIVER-SW-COMPONENT-TYPE">/PowerWindowController/CddWindow</TYPE-TREF>
						</SW-COMPONENT-PROTOTYPE>
						<SW-COMPONENT-PROTOTYPE>
							<SHORT-NAME>PowerWindowController</SHORT-NAME>
							<TYPE-TREF DEST="APPLICATION-SW-COMPONENT-TYPE">/PowerWindowController/PowerWindowController</TYPE-TREF>
						</SW-COMPONENT-PROTOTYPE>
						<SW-COMPONENT-PROTOTYPE>
							<SHORT-NAME>SensorButton</SHORT-NAME>
							<TYPE-TREF DEST="SENSOR-ACTUATOR-SW-COMPONENT-TYPE">/PowerWindowController/SensorButton</TYPE-TREF>
						</SW-COMPONENT-PROTOTYPE>
						<SW-COMPONENT-PROTOTYPE>
							<SHORT-NAME>CddLockLed</SHORT-NAME>
							<TYPE-TREF DEST="COMPLEX-DEVICE-DRIVER-SW-COMPONENT-TYPE">/PowerWindowController/CddLockLed</TYPE-TREF>
						</SW-COMPONENT-PROTOTYPE>
						<SW-COMPONENT-PROTOTYPE>
							<SHORT-NAME>CddLockSwitch</SHORT-NAME>
							<TYPE-TREF DEST="COMPLEX-DEVICE-DRIVER-SW-COMPONENT-TYPE">/PowerWindowController/CddLockSwitch</TYPE-TREF>
						</SW-COMPONENT-PROTOTYPE>
					</COMPONENTS>
					<CONNECTORS>
						<ASSEMBLY-SW-CONNECTOR>
							<SHORT-NAME>AssemblySwConnector</SHORT-NAME>
							<PROVIDER-IREF>
								<CONTEXT-COMPONENT-REF DEST="SW-COMPONENT-PROTOTYPE">/PowerWindowController/PWCTopLevel/CddButton</CONTEXT-COMPONENT-REF>
								<TARGET-P-PORT-REF DEST="P-PORT-PROTOTYPE">/PowerWindowController/CddButton/ButtonStateOut</TARGET-P-PORT-REF>
							</PROVIDER-IREF>
							<REQUESTER-IREF>
								<CONTEXT-COMPONENT-REF DEST="SW-COMPONENT-PROTOTYPE">/PowerWindowController/PWCTopLevel/SensorButton</CONTEXT-COMPONENT-REF>
								<TARGET-R-PORT-REF DEST="R-PORT-PROTOTYPE">/PowerWindowController/SensorButton/ButtonStateIn</TARGET-R-PORT-REF>
							</REQUESTER-IREF>
						</ASSEMBLY-SW-CONNECTOR>
						<ASSEMBLY-SW-CONNECTOR>
							<SHORT-NAME>AssemblySwConnector1</SHORT-NAME>
							<PROVIDER-IREF>
								<CONTEXT-COMPONENT-REF DEST="SW-COMPONENT-PROTOTYPE">/PowerWindowController/PWCTopLevel/SensorButton</CONTEXT-COMPONENT-REF>
								<TARGET-P-PORT-REF DEST="P-PORT-PROTOTYPE">/PowerWindowController/SensorButton/ActionRequestOut</TARGET-P-PORT-REF>
							</PROVIDER-IREF>
							<REQUESTER-IREF>
								<CONTEXT-COMPONENT-REF DEST="SW-COMPONENT-PROTOTYPE">/PowerWindowController/PWCTopLevel/PowerWindowController</CONTEXT-COMPONENT-REF>
								<TARGET-R-PORT-REF DEST="R-PORT-PROTOTYPE">/PowerWindowController/PowerWindowController/ActionRequestIn</TARGET-R-PORT-REF>
							</REQUESTER-IREF>
						</ASSEMBLY-SW-CONNECTOR>
						<ASSEMBLY-SW-CONNECTOR>
							<SHORT-NAME>AssemblySwConnector2</SHORT-NAME>
							<PROVIDER-IREF>
								<CONTEXT-COMPONENT-REF DEST="SW-COMPONENT-PROTOTYPE">/PowerWindowController/PWCTopLevel/CddWindow</CONTEXT-COMPONENT-REF>
								<TARGET-P-PORT-REF DEST="P-PORT-PROTOTYPE">/PowerWindowController/CddWindow/WindowPositionIn</TARGET-P-PORT-REF>
							</PROVIDER-IREF>
							<REQUESTER-IREF>
								<CONTEXT-COMPONENT-REF DEST="SW-COMPONENT-PROTOTYPE">/PowerWindowController/PWCTopLevel/PowerWindowController</CONTEXT-COMPONENT-REF>
								<TARGET-R-PORT-REF DEST="R-PORT-PROTOTYPE">/PowerWindowController/PowerWindowController/WindowPositionOut</TARGET-R-PORT-REF>
							</REQUESTER-IREF>
						</ASSEMBLY-SW-CONNECTOR>
						<ASSEMBLY-SW-CONNECTOR>
							<SHORT-NAME>AssemblySwConnector3</SHORT-NAME>
							<PROVIDER-IREF>
								<CONTEXT-COMPONENT-REF DEST="SW-COMPONENT-PROTOTYPE">/PowerWindowController/PWCTopLevel/CddLockLed</CONTEXT-COMPONENT-REF>
								<TARGET-P-PORT-REF DEST="P-PORT-PROTOTYPE">/PowerWindowController/CddLockLed/LedStateIn</TARGET-P-PORT-REF>
							</PROVIDER-IREF>
							<REQUESTER-IREF>
								<CONTEXT-COMPONENT-REF DEST="SW-COMPONENT-PROTOTYPE">/PowerWindowController/PWCTopLevel/SensorButton</CONTEXT-COMPONENT-REF>
								<TARGET-R-PORT-REF DEST="R-PORT-PROTOTYPE">/PowerWindowController/SensorButton/LedStateOut</TARGET-R-PORT-REF>
							</REQUESTER-IREF>
						</ASSEMBLY-SW-CONNECTOR>
						<ASSEMBLY-SW-CONNECTOR>
							<SHORT-NAME>AssemblySwConnector4</SHORT-NAME>
							<PROVIDER-IREF>
								<CONTEXT-COMPONENT-REF DEST="SW-COMPONENT-PROTOTYPE">/PowerWindowController/PWCTopLevel/CddLockSwitch</CONTEXT-COMPONENT-REF>
								<TARGET-P-PORT-REF DEST="P-PORT-PROTOTYPE">/PowerWindowController/CddLockSwitch/LockStateOut</TARGET-P-PORT-REF>
							</PROVIDER-IREF>
							<REQUESTER-IREF>
								<CONTEXT-COMPONENT-REF DEST="SW-COMPONENT-PROTOTYPE">/PowerWindowController/PWCTopLevel/SensorButton</CONTEXT-COMPONENT-REF>
								<TARGET-R-PORT-REF DEST="R-PORT-PROTOTYPE">/PowerWindowController/SensorButton/LockStateIn</TARGET-R-PORT-REF>
							</REQUESTER-IREF>
						</ASSEMBLY-SW-CONNECTOR>
					</CONNECTORS>
				</COMPOSITION-SW-COMPONENT-TYPE>
				<APPLICATION-SW-COMPONENT-TYPE>
					<SHORT-NAME>PowerWindowController</SHORT-NAME>
					<PORTS>
						<R-PORT-PROTOTYPE>
							<SHORT-NAME>WindowPositionOut</SHORT-NAME>
							<REQUIRED-INTERFACE-TREF DEST="CLIENT-SERVER-INTERFACE">/Interfaces/IfWindowPosition</REQUIRED-INTERFACE-TREF>
						</R-PORT-PROTOTYPE>
						<R-PORT-PROTOTYPE>
							<SHORT-NAME>ActionRequestIn</SHORT-NAME>
							<REQUIRED-INTERFACE-TREF DEST="SENDER-RECEIVER-INTERFACE">/Interfaces/IfActionRequest</REQUIRED-INTERFACE-TREF>
						</R-PORT-PROTOTYPE>
					</PORTS>
					<INTERNAL-BEHAVIORS>
						<SWC-INTERNAL-BEHAVIOR>
							<SHORT-NAME>IB_PWC</SHORT-NAME>
							<EVENTS>
								<TIMING-EVENT>
									<SHORT-NAME>TimingEvent</SHORT-NAME>
									<START-ON-EVENT-REF DEST="RUNNABLE-ENTITY">/PowerWindowController/PowerWindowController/IB_PWC/Controller</START-ON-EVENT-REF>
									<PERIOD>0.1</PERIOD>
								</TIMING-EVENT>
							</EVENTS>
							<HANDLE-TERMINATION-AND-RESTART>NO-SUPPORT</HANDLE-TERMINATION-AND-RESTART>
							<RUNNABLES>
								<RUNNABLE-ENTITY>
									<SHORT-NAME>Controller</SHORT-NAME>
									<MINIMUM-START-INTERVAL>0</MINIMUM-START-INTERVAL>
									<CAN-BE-INVOKED-CONCURRENTLY>false</CAN-BE-INVOKED-CONCURRENTLY>
									<DATA-RECEIVE-POINT-BY-ARGUMENTS>
										<VARIABLE-ACCESS>
											<SHORT-NAME>VariableAccess</SHORT-NAME>
											<ACCESSED-VARIABLE>
												<AUTOSAR-VARIABLE-IREF>
													<PORT-PROTOTYPE-REF DEST="R-PORT-PROTOTYPE">/PowerWindowController/PowerWindowController/ActionRequestIn</PORT-PROTOTYPE-REF>
													<TARGET-DATA-PROTOTYPE-REF DEST="VARIABLE-DATA-PROTOTYPE">/Interfaces/IfActionRequest/up</TARGET-DATA-PROTOTYPE-REF>
												</AUTOSAR-VARIABLE-IREF>
											</ACCESSED-VARIABLE>
										</VARIABLE-ACCESS>
										<VARIABLE-ACCESS>
											<SHORT-NAME>VariableAccess1</SHORT-NAME>
											<ACCESSED-VARIABLE>
												<AUTOSAR-VARIABLE-IREF>
													<PORT-PROTOTYPE-REF DEST="R-PORT-PROTOTYPE">/PowerWindowController/PowerWindowController/ActionRequestIn</PORT-PROTOTYPE-REF>
													<TARGET-DATA-PROTOTYPE-REF DEST="VARIABLE-DATA-PROTOTYPE">/Interfaces/IfActionRequest/down</TARGET-DATA-PROTOTYPE-REF>
												</AUTOSAR-VARIABLE-IREF>
											</ACCESSED-VARIABLE>
										</VARIABLE-ACCESS>
									</DATA-RECEIVE-POINT-BY-ARGUMENTS>
									<SERVER-CALL-POINTS>
										<SYNCHRONOUS-SERVER-CALL-POINT>
											<SHORT-NAME>SynchronousServerCallPoint</SHORT-NAME>
											<OPERATION-IREF>
												<CONTEXT-R-PORT-REF DEST="R-PORT-PROTOTYPE">/PowerWindowController/PowerWindowController/WindowPositionOut</CONTEXT-R-PORT-REF>
												<TARGET-REQUIRED-OPERATION-REF DEST="CLIENT-SERVER-OPERATION">/Interfaces/IfWindowPosition/SetWindowPosition</TARGET-REQUIRED-OPERATION-REF>
											</OPERATION-IREF>
											<TIMEOUT>0</TIMEOUT>
										</SYNCHRONOUS-SERVER-CALL-POINT>
									</SERVER-CALL-POINTS>
									<SYMBOL>Controller</SYMBOL>
								</RUNNABLE-ENTITY>
							</RUNNABLES>
							<SUPPORTS-MULTIPLE-INSTANTIATION>false</SUPPORTS-MULTIPLE-INSTANTIATION>
						</SWC-INTERNAL-BEHAVIOR>
					</INTERNAL-BEHAVIORS>
				</APPLICATION-SW-COMPONENT-TYPE>
				<SENSOR-ACTUATOR-SW-COMPONENT-TYPE>
					<SHORT-NAME>SensorButton</SHORT-NAME>
					<PORTS>
						<P-PORT-PROTOTYPE>
							<SHORT-NAME>ActionRequestOut</SHORT-NAME>
							<PROVIDED-COM-SPECS>
								<NONQUEUED-SENDER-COM-SPEC>
									<DATA-ELEMENT-REF DEST="VARIABLE-DATA-PROTOTYPE">/Interfaces/IfActionRequest/down</DATA-ELEMENT-REF>
									<HANDLE-OUT-OF-RANGE>NONE</HANDLE-OUT-OF-RANGE>
									<TRANSMISSION-ACKNOWLEDGE>
										<TIMEOUT>0</TIMEOUT>
									</TRANSMISSION-ACKNOWLEDGE>
									<USES-END-TO-END-PROTECTION>false</USES-END-TO-END-PROTECTION>
									<INIT-VALUE>
										<TEXT-VALUE-SPECIFICATION>
											<SHORT-LABEL>TextValue</SHORT-LABEL>
											<VALUE>FALSE</VALUE>
										</TEXT-VALUE-SPECIFICATION>
									</INIT-VALUE>
								</NONQUEUED-SENDER-COM-SPEC>
								<NONQUEUED-SENDER-COM-SPEC>
									<DATA-ELEMENT-REF DEST="VARIABLE-DATA-PROTOTYPE">/Interfaces/IfActionRequest/up</DATA-ELEMENT-REF>
									<HANDLE-OUT-OF-RANGE>NONE</HANDLE-OUT-OF-RANGE>
									<TRANSMISSION-ACKNOWLEDGE>
										<TIMEOUT>0</TIMEOUT>
									</TRANSMISSION-ACKNOWLEDGE>
									<USES-END-TO-END-PROTECTION>false</USES-END-TO-END-PROTECTION>
									<INIT-VALUE>
										<TEXT-VALUE-SPECIFICATION>
											<SHORT-LABEL>TextValue</SHORT-LABEL>
											<VALUE>FALSE</VALUE>
										</TEXT-VALUE-SPECIFICATION>
									</INIT-VALUE>
								</NONQUEUED-SENDER-COM-SPEC>
							</PROVIDED-COM-SPECS>
							<PROVIDED-INTERFACE-TREF DEST="SENDER-RECEIVER-INTERFACE">/Interfaces/IfActionRequest</PROVIDED-INTERFACE-TREF>
						</P-PORT-PROTOTYPE>
						<R-PORT-PROTOTYPE>
							<SHORT-NAME>ButtonStateIn</SHORT-NAME>
							<REQUIRED-INTERFACE-TREF DEST="CLIENT-SERVER-INTERFACE">/Interfaces/IfButtonState</REQUIRED-INTERFACE-TREF>
						</R-PORT-PROTOTYPE>
						<R-PORT-PROTOTYPE>
							<SHORT-NAME>LockStateIn</SHORT-NAME>
							<REQUIRED-INTERFACE-TREF DEST="CLIENT-SERVER-INTERFACE">/Interfaces/IfLockState</REQUIRED-INTERFACE-TREF>
						</R-PORT-PROTOTYPE>
						<R-PORT-PROTOTYPE>
							<SHORT-NAME>LedStateOut</SHORT-NAME>
							<REQUIRED-INTERFACE-TREF DEST="CLIENT-SERVER-INTERFACE">/Interfaces/IfLedState</REQUIRED-INTERFACE-TREF>
						</R-PORT-PROTOTYPE>
					</PORTS>
					<INTERNAL-BEHAVIORS>
						<SWC-INTERNAL-BEHAVIOR>
							<SHORT-NAME>IB_SB</SHORT-NAME>
							<EVENTS>
								<TIMING-EVENT>
									<SHORT-NAME>TimingEvent</SHORT-NAME>
									<START-ON-EVENT-REF DEST="RUNNABLE-ENTITY">/PowerWindowController/SensorButton/IB_SB/Button</START-ON-EVENT-REF>
									<PERIOD>0.1</PERIOD>
								</TIMING-EVENT>
							</EVENTS>
							<HANDLE-TERMINATION-AND-RESTART>NO-SUPPORT</HANDLE-TERMINATION-AND-RESTART>
							<RUNNABLES>
								<RUNNABLE-ENTITY>
									<SHORT-NAME>Button</SHORT-NAME>
									<MINIMUM-START-INTERVAL>0</MINIMUM-START-INTERVAL>
									<CAN-BE-INVOKED-CONCURRENTLY>false</CAN-BE-INVOKED-CONCURRENTLY>
									<DATA-SEND-POINTS>
										<VARIABLE-ACCESS>
											<SHORT-NAME>VariableAccess</SHORT-NAME>
											<ACCESSED-VARIABLE>
												<AUTOSAR-VARIABLE-IREF>
													<PORT-PROTOTYPE-REF DEST="P-PORT-PROTOTYPE">/PowerWindowController/SensorButton/ActionRequestOut</PORT-PROTOTYPE-REF>
													<TARGET-DATA-PROTOTYPE-REF DEST="VARIABLE-DATA-PROTOTYPE">/Interfaces/IfActionRequest/up</TARGET-DATA-PROTOTYPE-REF>
												</AUTOSAR-VARIABLE-IREF>
											</ACCESSED-VARIABLE>
										</VARIABLE-ACCESS>
										<VARIABLE-ACCESS>
											<SHORT-NAME>VariableAccess1</SHORT-NAME>
											<ACCESSED-VARIABLE>
												<AUTOSAR-VARIABLE-IREF>
													<PORT-PROTOTYPE-REF DEST="P-PORT-PROTOTYPE">/PowerWindowController/SensorButton/ActionRequestOut</PORT-PROTOTYPE-REF>
													<TARGET-DATA-PROTOTYPE-REF DEST="VARIABLE-DATA-PROTOTYPE">/Interfaces/IfActionRequest/down</TARGET-DATA-PROTOTYPE-REF>
												</AUTOSAR-VARIABLE-IREF>
											</ACCESSED-VARIABLE>
										</VARIABLE-ACCESS>
									</DATA-SEND-POINTS>
									<SERVER-CALL-POINTS>
										<SYNCHRONOUS-SERVER-CALL-POINT>
											<SHORT-NAME>SynchronousServerCallPoint</SHORT-NAME>
											<OPERATION-IREF>
												<CONTEXT-R-PORT-REF DEST="R-PORT-PROTOTYPE">/PowerWindowController/SensorButton/ButtonStateIn</CONTEXT-R-PORT-REF>
												<TARGET-REQUIRED-OPERATION-REF DEST="CLIENT-SERVER-OPERATION">/Interfaces/IfButtonState/GetButtonState</TARGET-REQUIRED-OPERATION-REF>
											</OPERATION-IREF>
											<TIMEOUT>0</TIMEOUT>
										</SYNCHRONOUS-SERVER-CALL-POINT>
										<SYNCHRONOUS-SERVER-CALL-POINT>
											<SHORT-NAME>SynchronousServerCallPoint1</SHORT-NAME>
											<OPERATION-IREF>
												<CONTEXT-R-PORT-REF DEST="R-PORT-PROTOTYPE">/PowerWindowController/SensorButton/LockStateIn</CONTEXT-R-PORT-REF>
												<TARGET-REQUIRED-OPERATION-REF DEST="CLIENT-SERVER-OPERATION">/Interfaces/IfLockState/GetLockState</TARGET-REQUIRED-OPERATION-REF>
											</OPERATION-IREF>
											<TIMEOUT>0</TIMEOUT>
										</SYNCHRONOUS-SERVER-CALL-POINT>
										<SYNCHRONOUS-SERVER-CALL-POINT>
											<SHORT-NAME>SynchronousServerCallPoint2</SHORT-NAME>
											<OPERATION-IREF>
												<CONTEXT-R-PORT-REF DEST="R-PORT-PROTOTYPE">/PowerWindowController/SensorButton/LedStateOut</CONTEXT-R-PORT-REF>
												<TARGET-REQUIRED-OPERATION-REF DEST="CLIENT-SERVER-OPERATION">/Interfaces/IfLedState/SetLedState</TARGET-REQUIRED-OPERATION-REF>
											</OPERATION-IREF>
											<TIMEOUT>0</TIMEOUT>
										</SYNCHRONOUS-SERVER-CALL-POINT>
									</SERVER-CALL-POINTS>
									<SYMBOL>Button</SYMBOL>
								</RUNNABLE-ENTITY>
							</RUNNABLES>
							<SUPPORTS-MULTIPLE-INSTANTIATION>false</SUPPORTS-MULTIPLE-INSTANTIATION>
						</SWC-INTERNAL-BEHAVIOR>
					</INTERNAL-BEHAVIORS>
					<SENSOR-ACTUATOR-REF DEST="HW-ELEMENT">/PowerWindowController/CddButton</SENSOR-ACTUATOR-REF>
				</SENSOR-ACTUATOR-SW-COMPONENT-TYPE>
			</ELEMENTS>
		</AR-PACKAGE>
		<AR-PACKAGE>
			<SHORT-NAME>System</SHORT-NAME>
			<ELEMENTS>
				<ECUC-VALUE-COLLECTION>
					<SHORT-NAME>EcucValueCollection</SHORT-NAME>
					<ECU-EXTRACT-REF DEST="SYSTEM">/System/SystemPWC</ECU-EXTRACT-REF>
					<ECUC-VALUES>
						<ECUC-MODULE-CONFIGURATION-VALUES-REF-CONDITIONAL>
							<ECUC-MODULE-CONFIGURATION-VALUES-REF DEST="ECUC-MODULE-CONFIGURATION-VALUES">/Ecuc/Os</ECUC-MODULE-CONFIGURATION-VALUES-REF>
						</ECUC-MODULE-CONFIGURATION-VALUES-REF-CONDITIONAL>
						<ECUC-MODULE-CONFIGURATION-VALUES-REF-CONDITIONAL>
							<ECUC-MODULE-CONFIGURATION-VALUES-REF DEST="ECUC-MODULE-CONFIGURATION-VALUES">/Ecuc/Rte</ECUC-MODULE-CONFIGURATION-VALUES-REF>
						</ECUC-MODULE-CONFIGURATION-VALUES-REF-CONDITIONAL>
					</ECUC-VALUES>
				</ECUC-VALUE-COLLECTION>
				<SYSTEM>
					<SHORT-NAME>SystemPWC</SHORT-NAME>
					<ROOT-SOFTWARE-COMPOSITIONS>
						<ROOT-SW-COMPOSITION-PROTOTYPE>
							<SHORT-NAME>RootSwCompositionPrototype</SHORT-NAME>
							<SOFTWARE-COMPOSITION-TREF DEST="COMPOSITION-SW-COMPONENT-TYPE">/PowerWindowController/PWCTopLevel</SOFTWARE-COMPOSITION-TREF>
						</ROOT-SW-COMPOSITION-PROTOTYPE>
					</ROOT-SOFTWARE-COMPOSITIONS>
					<SYSTEM-VERSION>1.0.0</SYSTEM-VERSION>
				</SYSTEM>
			</ELEMENTS>
		</AR-PACKAGE>
	</AR-PACKAGES>
</AUTOSAR>